buildscript {
	ext {
		springIntegrationVersion = '1.1.0.RELEASE'
        springCloudVersion = '1.1.0.RELEASE'
        springBootVersion = '1.3.5.RELEASE'
		apacheCommonsVersion = '3.3.2'
		activitiVersion = '5.19.0'
		jacksonVersion = '2.7.2'
		jacksonMapperVersion = '1.9.13'
		swaggerVersion = '1.0.2'
		guavaVersion = '19.0'
		flywayVersion = '4.0'
		dependencyManagementPlugin = '0.5.6.RELEASE'
	}
    repositories {
    	mavenLocal()
        mavenCentral()  
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'

apply plugin: 'maven'

apply plugin: 'eclipse'

apply plugin: 'spring-boot'

version = '0.0.1-SNAPSHOT'

group   = 'br.jus.stf.digital'

repositories {
	mavenLocal()
    mavenCentral()
}

dependencies {
    
    compile("org.springframework.boot:spring-boot-starter")
		
    compile("org.springframework.boot:spring-boot-starter-web")
    
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("org.springframework.boot:spring-boot-starter-amqp")
                
    compile("org.springframework.boot:spring-boot-starter-data-elasticsearch")
        
    compile("org.springframework.boot:spring-boot-starter-integration")
    
    compile("org.springframework.cloud:spring-cloud-commons:${springCloudVersion}")
		
    compile("org.springframework.integration:spring-integration-jdbc")

    compile("org.springframework.integration:spring-integration-amqp")

    compile("org.springframework.integration:spring-integration-java-dsl:${springIntegrationVersion}")
		
    compile("com.google.guava:guava:${guavaVersion}")
        
    compile("org.apache.commons:commons-lang3:${apacheCommonsVersion}")
		
    compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
		
    compile("org.codehaus.jackson:jackson-mapper-asl:${jacksonMapperVersion}")
        
    compile("org.activiti:activiti-spring-boot-starter-basic:$activitiVersion")
    
    compile("com.mangofactory:swagger-springmvc:$swaggerVersion")
    
    compile("com.h2database:h2")
    
    compile("org.flywaydb:flyway-core:$flywayVersion")
    
    compile("com.jayway.jsonpath:json-path")
    
    compile("org.springframework.boot:spring-boot-starter-test")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}